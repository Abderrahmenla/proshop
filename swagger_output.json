{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Proshop API",
    "description": "Proshop API documentation by <b>swagger-autogen</b>."
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "Endpoints"
    },
    {
      "name": "Orders",
      "description": "EndPoints"
    },
    {
      "name": "Products",
      "description": "EndPoints"
    },
    {
      "name": "Uploads",
      "description": "EndPoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/config/paypal": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api/products/": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get all products.",
        "parameters": [
          {
            "name": "pageNumber",
            "description": "The number of the required page.",
            "type": "string",
            "in": "query"
          },
          {
            "name": "keyword",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Get all Products for the admin.",
        "parameters": [
          {
            "name": "newProduct",
            "in": "body",
            "description": "the product details.",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "description": "Created product."
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/products/{id}/reviews": {
      "post": {
        "tags": [
          "Products"
        ],
        "description": "Create a Product review by a logged in client.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the product."
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rating": {
                  "example": "any"
                },
                "comment": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/products/top": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get top Products.",
        "parameters": [],
        "responses": {}
      }
    },
    "/api/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Get a product by the id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the product."
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "description": "The product."
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Update a Product by the admin.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the product."
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "price": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "image": {
                  "example": "any"
                },
                "brand": {
                  "example": "any"
                },
                "category": {
                  "example": "any"
                },
                "countInStock": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Product"
            },
            "description": "Updated product."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": " Delete a product.Admin only.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the product."
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get all users by the Admin .",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Sign up.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The user have been registered.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Authenticate user and get token.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Signed in."
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get client profile by logged client.",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update client profile by logged client.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "Get user by ID,Admin only.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user."
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "Update a user by ID.Admin only.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user."
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "isAdmin": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete a client by admin.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user."
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/orders/": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get all orders for the admin.",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "description": "Place an order.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "orderItems": {
                  "example": "any"
                },
                "shippingAddress": {
                  "example": "any"
                },
                "paymentMethod": {
                  "example": "any"
                },
                "itemsPrice": {
                  "example": "any"
                },
                "taxPrice": {
                  "example": "any"
                },
                "shippingPrice": {
                  "example": "any"
                },
                "totalPrice": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created.",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/orders/myorders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get logged in users orders",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Get specific order details for the client.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the order."
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "description": "Your order."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/orders/{id}/pay": {
      "put": {
        "tags": [
          "Orders"
        ],
        "description": "Update order to paid status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the order."
          },
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                },
                "status": {
                  "example": "any"
                },
                "update_time": {
                  "example": "any"
                },
                "payer": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "description": "Order is paid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/orders/{id}/deliver": {
      "put": {
        "tags": [
          "Orders"
        ],
        "description": "Update the order to deliver status.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the order."
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Order"
            },
            "description": "Order is delivered."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/upload/": {
      "post": {
        "tags": [
          "Uploads"
        ],
        "description": "Upload the image.",
        "parameters": [],
        "responses": {}
      }
    }
  },
  "definitions": {
    "Order": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "example": ""
        },
        "orderItems": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": ""
            },
            "qty": {
              "type": "number",
              "example": 5
            },
            "image": {
              "type": "string",
              "example": "/uploads/Screen Shot 2020-09-29 at 5.50.52 PM.png"
            },
            "price": {
              "type": "number",
              "example": 1500
            },
            "product": {
              "type": "string",
              "example": ""
            }
          },
          "required": [
            "name",
            "qty",
            "image",
            "price",
            "product"
          ]
        },
        "shippingAddress": {
          "type": "object",
          "properties": {
            "address": {
              "type": "string",
              "example": "sdg"
            },
            "city": {
              "type": "string",
              "example": "tunis"
            },
            "postalCode": {
              "type": "string",
              "example": "1002"
            },
            "country": {
              "type": "string",
              "example": "Tunisia"
            }
          },
          "required": [
            "address",
            "city",
            "postalCode",
            "country"
          ]
        },
        "paymentResult": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": ""
            },
            "status": {
              "type": "string",
              "example": ""
            },
            "email_address": {
              "type": "string",
              "example": ""
            },
            "update_time": {
              "type": "string",
              "example": ""
            }
          }
        },
        "taxPrice": {
          "type": "number",
          "example": 100
        },
        "shippingPrice": {
          "type": "number",
          "example": 100
        },
        "totalPrice": {
          "type": "number",
          "example": 1220
        },
        "isPaid": {
          "type": "boolean",
          "example": false
        },
        "paidAt": {
          "type": "string",
          "example": ""
        },
        "isDelivered": {
          "type": "boolean",
          "example": false
        },
        "deliveredAt": {
          "type": "string",
          "example": ""
        },
        "paymentMethod": {
          "type": "string",
          "example": "paypal"
        }
      },
      "required": [
        "taxPrice",
        "shippingPrice",
        "totalPrice",
        "isPaid",
        "isDelivered",
        "paymentMethod"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": ""
        },
        "name": {
          "type": "string",
          "example": "abderrahmen"
        },
        "email": {
          "type": "string",
          "example": "admin@example.comm"
        },
        "password": {
          "type": "string",
          "example": "123456"
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        },
        "token": {
          "type": "string",
          "example": "oiuytiotyu"
        }
      },
      "required": [
        "name",
        "email",
        "password",
        "isAdmin"
      ]
    },
    "Product": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "example": ""
        },
        "name": {
          "type": "string",
          "example": "Xiome X5"
        },
        "image": {
          "type": "string",
          "example": ""
        },
        "brand": {
          "type": "string",
          "example": "Sample brand"
        },
        "category": {
          "type": "string",
          "example": "Sample category"
        },
        "description": {
          "type": "string",
          "example": "Sample description"
        },
        "rating": {
          "type": "number",
          "example": 5
        },
        "numReviews": {
          "type": "number",
          "example": 1
        },
        "price": {
          "type": "number",
          "example": 200
        },
        "countInStock": {
          "type": "number",
          "example": 5
        },
        "reviews": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": ""
              },
              "rating": {
                "type": "number",
                "example": 0
              },
              "comment": {
                "type": "string",
                "example": ""
              },
              "user": {
                "type": "string",
                "example": ""
              }
            },
            "required": [
              "name",
              "rating",
              "comment",
              "user"
            ]
          }
        }
      },
      "required": [
        "user",
        "name",
        "image",
        "brand",
        "category",
        "description",
        "rating",
        "numReviews",
        "price",
        "countInStock"
      ]
    }
  }
}